import type { ApiNetIO, ApiStatusApp, BaseApiApp } from "@discloudapp/api-types/v2";
import type DiscloudApp from "../discloudApp/DiscloudApp";
import Base from "./Base";
export default class AppStatus extends Base {
    /**
     * Your app id
     */
    readonly appId: string;
    /**
     * Status of your application
     * - It can be `Online` or `Offline` for example
     */
    container: string;
    /**
     * CPU usage as percentage
     */
    cpu: string;
    /**
     * Relative time of the last restart
     */
    lastRestart: string;
    /**
     * RAM usage
     */
    memory: string;
    /**
     * Percentage of memory usage
     */
    memoryUsage: number;
    /**
     * Internet usage
     */
    netIO: ApiNetIO;
    /**
     * Storage space
     */
    ssd: string;
    /**
     * Date of your application has started
     */
    startedAt: Date;
    /**
     * Timestamp of when your app started
     */
    startedAtTimestamp: number;
    constructor(discloudApp: DiscloudApp, data: BaseApiApp);
    protected _patch(data: Partial<ApiStatusApp>): this;
    get app(): import("./App").default | undefined;
    fetch(): Promise<AppStatus>;
}
//# sourceMappingURL=AppStatus.d.ts.map