import type { Constructable } from "../@types";
import type DiscloudApp from "../discloudApp/DiscloudApp";
import DataManager from "./DataManager";
/**
 * Manager of cache
 */
export default abstract class CachedManager<T extends Constructable<T>> extends DataManager<T> {
    constructor(discloudApp: DiscloudApp, holds: T, iterable?: Iterable<InstanceType<T>>);
    protected _add(data: any): InstanceType<T>;
    protected _addMany(data: any[]): Map<string, InstanceType<T>>;
    protected _clear(data?: (string | {
        id: string;
    })[]): void;
    protected _delete(id: string): boolean;
    protected _deleteMany(ids: string[]): boolean;
}
//# sourceMappingURL=CachedManager.d.ts.map