"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const BaseManager_1 = tslib_1.__importDefault(require("./BaseManager"));
/**
 * Manager for data
 */
class DataManager extends BaseManager_1.default {
    constructor(discloudApp, holds) {
        super(discloudApp);
        Object.defineProperties(this, {
            _cache: {
                value: new Map(),
            },
            holds: {
                value: holds,
            },
        });
    }
    get cache() {
        return this._cache;
    }
    /**
     * Resolves a data entry to a data Object.
     * @param idOrInstance - The id or instance of something in this Manager
     */
    resolve(idOrInstance) {
        if (idOrInstance instanceof this.holds)
            return idOrInstance;
        if (typeof idOrInstance === "string")
            return this.cache.get(idOrInstance) ?? null;
        return null;
    }
    resolveId(idOrInstance) {
        if (typeof idOrInstance === "string")
            return idOrInstance;
        // @ts-expect-error ts(2339)
        if (idOrInstance instanceof this.holds)
            return idOrInstance.id;
        return null;
    }
    valueOf() {
        return this.cache;
    }
}
exports.default = DataManager;
