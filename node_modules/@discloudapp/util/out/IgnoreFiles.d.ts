export declare const blockedFiles: {
    common: string[];
    go: never[];
    js: string[];
    py: string[];
    rb: string[];
    rs: string[];
    ts: string[];
};
export declare const allBlockedFiles: string[];
export declare const allBlockedFilesRegex: RegExp;
export interface IgnoreFilesOptions {
    fileName: string;
    path: string | string[];
    optionalIgnoreList?: string[];
}
export declare class IgnoreFiles {
    readonly fileName: string;
    readonly filesIgnore: Set<string>;
    readonly list: string[];
    readonly paths: Set<string>;
    constructor(options: IgnoreFilesOptions);
    static findIgnoreFiles(fileName: string, paths: Set<string>, ignore: string[]): Set<string>;
    static normalizeIgnore(ignore: string, path?: string): string;
    static normalizePath(path: string): string;
    static normalizePaths(paths: string[]): string[];
    static processIgnoreFile(file: string): string[];
    processIgnoreFiles(files?: Set<string>): string[];
}
//# sourceMappingURL=IgnoreFiles.d.ts.map